name: Sync Detection Rules

on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:

jobs:
  download-and-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      checks: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - name: Install dependencies
      run: pip install requests

    - name: Run the script
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SUBLIME_API_TOKEN:  ${{ secrets.SUBLIME_API_TOKEN }}
        DELETE_RULES_FROM_CLOSED_PRS_DELAY: 0
      run: python scripts/download_detection_rules.py

    - name: Commit changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # First check if there are any changes
        if [[ -z $(git status --porcelain detection-rules) ]]; then
          echo "No changes to detection rules"
          exit 0
        fi
        
        # Get list of modified files
        FILES=$(git status --porcelain detection-rules | awk '{print $2}')
        
        # Track stats for the summary
        ADDED_COUNT=0
        MODIFIED_COUNT=0
        DELETED_COUNT=0
        UPDATED_PRS=()
        
        # Process each file individually
        for FILE in $FILES; do
          # Skip non-rule files 
          if [[ ! "$FILE" =~ .*\.yml$ ]]; then
            continue
          fi
          
          BASENAME=$(basename "$FILE")
          
          # Extract PR number from filename (format: PR_NUMBER_filename.yml)
          PR_NUMBER=$(echo "$BASENAME" | grep -o "^[0-9]*")
          UPDATED_PRS+=("$PR_NUMBER")
          
          # Handle removed files
          if [[ ! -f "$FILE" ]]; then
            git add "$FILE"
            git commit -m "[PR #${PR_NUMBER}] Delete detection rule"
            DELETED_COUNT=$((DELETED_COUNT+1))
            continue
          fi
          
          # Extract rule name
          RULE_NAME=$(grep -m 1 "name:" "$FILE" | sed 's/name: //' | sed 's/^"//' | sed 's/"$//' | sed "s/^'//" | sed "s/'$//")
          
          # Determine status directly from git
          GIT_STATUS=$(git status --porcelain "$FILE" | cut -c1-2 | tr -d ' ')
          if [[ "$GIT_STATUS" == "A" ]]; then
            STATUS="added"
            ADDED_COUNT=$((ADDED_COUNT+1))
          elif [[ "$GIT_STATUS" == "M" ]]; then
            STATUS="modified" 
            MODIFIED_COUNT=$((MODIFIED_COUNT+1))
          else
            STATUS="changed"
            MODIFIED_COUNT=$((MODIFIED_COUNT+1))
          fi
          
          # Build commit message
          COMMIT_MSG="[PR #${PR_NUMBER}] ${STATUS} rule: ${RULE_NAME}"
          
          # Add file and commit
          git add "$FILE"
          git commit -m "$COMMIT_MSG"
        done
        
        # Get unique PR count
        UNIQUE_PRS=$(printf '%s\n' "${UPDATED_PRS[@]}" | sort -u | wc -l)
        
        # Create summary
        echo "Detection Rules Sync Summary ($(date '+%Y-%m-%d %H:%M:%S'))"
        echo "- PRs processed: ${UNIQUE_PRS}"
        echo "- Rules added: ${ADDED_COUNT}"
        echo "- Rules modified: ${MODIFIED_COUNT}"
        echo "- Rules deleted: ${DELETED_COUNT}"
        
        # Push changes
        git push
