name: "Spam: Spoofed domain using default Microsoft Exchange Online sending infrastructure"
description: "Message is sent from a default Microsoft Exchange Online domain (*.onmicrosoft.com) but is abusing or spoofing another domain, and contains suspicious indicators, such as a suspicious recipient pattern, free subdomain links, an unregistered sender domain, or the subject containing a recipient's local part."
type: "rule"
severity: "medium"
source: |
  type.inbound
  and (
    sender.email.domain.root_domain != "onmicrosoft.com"
    or any(headers.hops,
           .index == 0
           and any(.authentication_results.dkim_details,
                   strings.ends_with(.domain, "onmicrosoft.com")
           )
    )
  )
  and length(body.links) > 0
  and 3 of (
    (
      length(recipients.bcc) > 0
      or any(recipients.to,
             strings.ilike(.display_name, "undisclosed?recipients")
      )
      or not any(recipients.to, .email.domain.valid)
    ),
    (
      any(body.links,
          .href_url.domain.root_domain in $free_subdomain_hosts
          and .href_url.domain.subdomain is not null
          and not (
            strings.ends_with(.href_url.url, "jpeg")
            or strings.ends_with(.href_url.url, "png")
          )
          and .href_url.domain.subdomain != "www"
      )
    ),
    not beta.whois(sender.email.domain).found,
    any(recipients.to,
        strings.icontains(subject.subject, .email.local_part)
        and .email.domain.valid
    )
  )
  // bounce-back negations
  and not strings.like(sender.email.local_part,
                       "*postmaster*",
                       "*mailer-daemon*",
                       "*administrator*"
  )
  and not any(attachments,
              .content_type in (
                "message/rfc822",
                "message/delivery-status",
                "text/calendar"
              )
  )
  // negating legit replies
  and not (
    (
      strings.istarts_with(subject.subject, "RE:")
      or strings.istarts_with(subject.subject, "FW:")
      or strings.istarts_with(subject.subject, "FWD:")
      or regex.imatch(subject.subject, '[^:]?automat.[^:]{0,20}:.*$')
    )
    and (
      length(headers.references) > 0
      and any(headers.hops, any(.fields, strings.ilike(.name, "In-Reply-To")))
    )
  )
  and (
    not profile.by_sender().solicited
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  )
  and not sender.email.domain.domain in $org_domains
  
tags:
  - "Attack surface reduction"
  - pr_author_aidenmitchell
attack_types:
  - "Spam"
tactics_and_techniques:
  - "Free email provider"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "Sender analysis"
  - "URL analysis"
id: "e10fa634-a257-58e7-b3e1-8f727b4c2fed"
