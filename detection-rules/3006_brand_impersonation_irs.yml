name: "PR# 3006 - Brand Impersonation: Internal Revenue Service"
description: "Detects messages from senders posing as the Internal Revenue Service by checking display name similarity and content indicators from body text and screenshots. Excludes legitimate IRS domains and authenticated senders."
type: "rule"
severity: "high"
source: |
  type.inbound
  and (
    // display name contains IRS
    (
      strings.ilike(strings.replace_confusables(sender.display_name),
                    '*internal revenue service*'
      )
      or strings.ilike(strings.replace_confusables(sender.display_name),
                    'IRS*'
      )
    )
    // levenshtein distance similar to IRS
    or strings.ilevenshtein(strings.replace_confusables(sender.display_name),
                            'internal revenue service'
    ) <= 1
  )
  and (
    any(beta.ml_topic(body.current_thread.text).topics,
        .name in ("Security and Authentication", "Financial Communications")
        and .confidence in ("high")
    )
    or any(beta.ml_topic(beta.ocr(beta.message_screenshot()).text).topics,
           .name in ("Security and Authentication", "Financial Communications")
           and .confidence in ("high")
    )
    or any(ml.nlu_classifier(body.current_thread.text).intents,
           .name == "cred_theft" and .confidence == "high"
    )
    or any(ml.nlu_classifier(beta.ocr(beta.message_screenshot()).text).intents,
           .name == "cred_theft" and .confidence == "high"
    )
  )
  
  // and the sender is not in org_domains or from IRS domains and passes auth
  and not (
    sender.email.domain.root_domain in $org_domains
    or (
      sender.email.domain.root_domain in ("irs.gov", "govdelivery.com")
      and headers.auth_summary.dmarc.pass
    )
  )
  // and the sender is not from high trust sender root domains
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and not headers.auth_summary.dmarc.pass
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
  and not profile.by_sender().solicited

attack_types:
  - "BEC/Fraud"
  - "Credential Phishing"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Natural Language Understanding"
  - "Optical Character Recognition"
  - "Sender analysis"
id: "dc32c6cd-02d2-5781-9e4f-670488d869a8"
tags:
  - created_from_open_prs
  - rule_status_modified
  - pr_author_markmsublime
references:
  - https://github.com/sublime-security/sublime-rules/pull/3006